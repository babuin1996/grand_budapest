<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "bookings".
 *
 * @property int $id
 * @property int|null $hotel_number_id
 * @property string|null $customer_name
 * @property string|null $customer_phone
 * @property string|null $booking_date
 * @property int|null $booked_at
 */
class Bookings extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'bookings';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['hotel_number_id', 'booked_at'], 'integer'],
            [['booking_date'], 'safe'],
            [['customer_name', 'customer_phone'], 'string', 'max' => 255],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'hotel_number_id' => 'Номер',
            'customer_name' => 'Имя клиента',
            'customer_phone' => 'Телефон клиента',
            'booking_date' => 'Дата, на которую забронировали',
            'booked_at' => 'Booked At',
        ];
    }

    public function beforeSave($insert)
    {
        if ($this->isNewRecord) {
            $this->booked_at = time();
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function beforeValidate()
    {
        if (self::findByIdAndBookingDate($this->hotel_number_id, $this->booking_date, $this->id)) {
            $this->addError('booking_date', 'Данный номер уже забронирован на указанную дату.');
        }

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    public static function findByIdAndBookingDate($hotel_number_id, $booking_date, $booking_id)
    {
        self::find()
            ->where([
                'hotel_number_id' => $hotel_number_id,
                'booking_date' => $booking_date,
            ])
            ->andWhere(['!=', 'id', $booking_id])
            ->one();
    }
}
